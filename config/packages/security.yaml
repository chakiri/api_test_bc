security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm : bcrypt
    providers:
        in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        #documentation not jwt
        documentation:
            pattern: ^/api/doc
            security: false

        #login jwt token api
        api_login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            provider: in_database
            json_login:
                check_path: api_security_login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            provider: in_database
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        #Login mainly application
        main:
            anonymous: true
            provider: in_database
            form_login:
                login_path: security_login
                check_path: security_login
            logout:
                path: security_logout
                target: security_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/advert/new, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/advert/edit, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
